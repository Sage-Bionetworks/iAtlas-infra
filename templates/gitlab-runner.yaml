AWSTemplateFormatVersion: 2010-09-09
Description: >-
  A worker host for a GitLab runner connected to Jumpcloud
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.nano
  VpcSubnet:
    Description: Existing VPC subnet to home the instance. Currently only private subnets allowed.
    Type: String
    Default: PrivateSubnet
    AllowedValues:
      - PrivateSubnet
      - PrivateSubnet1
      - PrivateSubnet2
  VpcName:
    Description: Name of an existing VPC to run the instance in.
    Type: String
    Default: iatlasvpc
  AMIId:
    Description: ID of the AMI to deploy
    Type: AWS::EC2::Image::Id
  Environment:
    Description: Indication of which environment this runner is associated with
    Type: String

Resources:
  # KMS Keys
  KmsDecryptManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadAccess
            Action:
              - 'kms:ListKeys'
              - 'kms:ListAliases'
              - 'kms:DescribeKey'
              - 'kms:ListKeyPolicies'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'iam:ListUsers'
              - 'iam:ListRoles'
            Effect: Allow
            Resource: !ImportValue
              'Fn::Sub': '${AWS::Region}-iatlas-kms-${Environment}-KmsKeyArn'
          - Sid: DecryptAccess
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Effect: Allow
            Resource: !ImportValue
              'Fn::Sub': '${AWS::Region}-iatlas-kms-${Environment}-KmsKeyArn'

  #Allow read parameter on arn...parameter/iatlas/{prod,staging}/*
  SsmManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: GetParamAccess
            Action:
              - 'ssm:*'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:ssm:'
                - !Ref AWS::Region
                - ':'
                - !Ref AWS::AccountId
                - ':'
                - 'parameter/iatlas/'
                - !Ref Environment
                - '/*'

  EC2ServiceRole: #TODO will need to add roles for snapshotting DB
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-essentials-TagRootVolumePolicy'
        - !Ref SsmManagedPolicy
        - !Ref KmsDecryptManagedPolicy
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'

  RunnerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: "/"
      Roles:
        - !Ref EC2ServiceRole

  RunnerEc2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AMIId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref RunnerInstanceProfile
      NetworkInterfaces:
        - DeleteOnTermination: true
          DeviceIndex: "0"
          GroupSet:
            - !ImportValue
              'Fn::Sub': '${AWS::Region}-${VpcName}-VpnSecurityGroup'
            - !ImportValue
              'Fn::Sub': '${AWS::Region}-iatlasdb-${Environment}-DBAccessSecurityGroup'
          SubnetId: !ImportValue
            'Fn::Sub': '${AWS::Region}-${VpcName}-${VpcSubnet}'
      Tags:
        - Key: "ManagedInstanceMaintenanceTarget"
          Value: "yes"
        - Key: "PatchGroup"
          Value: "prod-default"
Outputs:
  RunnerEc2InstanceId:
    Value: !Ref RunnerEc2Instance
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-Ec2InstanceId'
