AWSTemplateFormatVersion: 2010-09-09
Description: >
  Aurora DB cluster, DB instance, and runner/jumpbox host
Parameters:
  VpcName:
    Description: 'Name of an existing VPC to run the instance in'
    Type: String
  KmsKey:
    Description: 'Encryption key to use for storage'
    Type: String
  DbSecretPrefix:
    Default: ''
    Description: A prefix for the secret values in the Secrets Manager.
    NoEcho: 'true'
    Type: String
  DbCredsName:
    Default: 'iatlas_db_creds_encrypted'
    Description: The name for the secret Aurora DB credentials in the Secrets Manager.
    NoEcho: 'true'
    Type: String
  DBInstanceClass:
    Description: 'Instance class. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region'
    Type: 'String'
    ConstraintDescription: 'Instance type must be of the ones supported for the region. Please refer to: https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-classes.html#db-instance-classes-by-region'
    AllowedValues:
      - db.t3.xlarge
      - db.t3.large
      - db.t3.medium
      - db.t3.small
  DBEngineVersion:
    Description: 'Database engine version'
    Type: String
    AllowedValues:
      - 11.7
      - 11.6
  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: 5432
    ConstraintDescription: 'Must be in the range [1115-65535]'
    MinValue: 1115
    MaxValue: 65535

Resources:
  #############
  ### Roles ###
  #############
  MonitoringIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'monitoring.rds.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole

  ##############
  ### Groups ###
  ##############
  DBAccessSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      GroupDescription: Instances with access to DB servers
      # The GroupName must be defined so that it may be passed via the gitlab-runner config.
      GroupName: !Sub '${AWS::StackName}-DBAccessSecurityGroup'
  ClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue
        'Fn::Sub': '${AWS::Region}-${VpcName}-VPCId'
      GroupDescription: DB server management and access ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
          SourceSecurityGroupId: !Ref DBAccessSecurityGroup
          Description: 'Access from runner to DB ports'
  ClusterSecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt 'ClusterSecurityGroup.GroupId'
      IpProtocol: '-1'
      SourceSecurityGroupId: !Ref ClusterSecurityGroup
      Description: 'Self Reference'
  DBSubnetGroup:
    Type: AWS::DocDB::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Ref 'AWS::StackName'
      SubnetIds:
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet1'
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-PrivateSubnet2'
  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Join [ '- ', [ 'Aurora Parameter Group for  ', !Ref 'AWS::StackName' ] ]
      Family: aurora-postgresql11
      Parameters:
        rds.force_ssl: 1
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Join [ '- ', [ 'Aurora Parameter Group for  ', !Ref 'AWS::StackName' ] ]
      Family: aurora-postgresql11
# Currently not changing parameters from default values
# https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Reference.html#AuroraPostgreSQL.Reference.ParameterGroups
#     Parameters:

  ###############
  ### Secrets ###
  ###############
  DbCredentialSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Username and password for database
      KmsKeyId: !Ref KmsKey
      Name: !Ref 'DbCredsName'
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DbSecretPrefix}iatlas", "db_name": "${DbSecretPrefix}iatlas"}'
        GenerateStringKey: 'password'
        PasswordLength: 42
        ExcludeCharacters: '"@/\'
        ExcludePunctuation: True
      Tags:
        - Key: Name
          Value: db-secret

  #############################
  ### DB Cluster & Instance ###
  #############################
  DBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      Port: !Ref DBPort
      MasterUsername: !Sub '{{resolve:secretsmanager:${DbCredentialSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DbCredentialSecret}:SecretString:password}}'
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
      StorageEncrypted: true
      PreferredMaintenanceWindow: 'sat:06:54-sat:07:24'
      VpcSecurityGroupIds:
        - !Ref ClusterSecurityGroup
        - !ImportValue
          'Fn::Sub': '${AWS::Region}-${VpcName}-VpnSecurityGroup'
  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBParameterGroupName: !Ref DBParameterGroup
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      AutoMinorVersionUpgrade: true
      PerformanceInsightsKMSKeyId: !Ref KmsKey
      PerformanceInsightsRetentionPeriod: 7
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      DBInstanceClass: !Ref DBInstanceClass

Outputs:
  ClusterEndpoint:
    Value: !GetAtt DBCluster.Endpoint.Address
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterEndpointAddress'
  ClusterReadEndpoint:
    Value: !GetAtt DBCluster.ReadEndpoint.Address
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterReadEndpointAddress'
  ClusterPort:
    Value: !GetAtt DBCluster.Endpoint.Port
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterEndpointPort'
  InstanceId:
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-InstanceId'
  DBAccessSecurityGroup:
    Value: !Ref DBAccessSecurityGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBAccessSecurityGroup'
  DBAccessSecurityGroupName:
    Description: 'The explicit name of the Security Group so that it may be referenced in the gitlab-runner config.'
    Value: !Sub '${AWS::StackName}-DBAccessSecurityGroup'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DBAccessSecurityGroupName'
  ClusterSecurityGroup:
    Value: !Ref ClusterSecurityGroup
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ClusterSecurityGroup'
  DbCredsArn:
    Value: !Ref 'DbCredentialSecret'
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-DbCredsArn'
